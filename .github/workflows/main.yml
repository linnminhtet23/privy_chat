name: Build & Upload to Firebase App Distribution

on:
  push:
    branches:
      - master
      - develop 

jobs:
  build:

    runs-on: ubuntu-latest # Use macOS runner for iOS builds

    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"

      - name: Decode google-services.json
        env: 
            GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo "$GOOGLE_SERVICES_JSON" > android/app/google-services.json

      - name: Decode firebase_option
        env:
          firebase_options_dart: ${{ secrets.FIREBASE_OPTION }}
        run: echo "$firebase_options_dart" > lib/firebase_options.dart

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      
      - run: flutter pub get
      
      # Separate Android Build
      - name: Build Android APK
        run: |
          if [ "${{ github.ref }}" == "refs/heads/master" ]; then
            flutter build apk --flavor production
          else
            flutter build apk --flavor development
          fi
          
      - name: Upload APK to Firebase App Distribution
        if: github.ref == 'refs/heads/master' # Only for production branch
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
            appId: ${{ secrets.PRIVY_CHAT_ID_ANDROID }}
            token: ${{ secrets.TOKEN }}
            groups: production_group
            file: build/app/outputs/apk/release/app-release.apk

      - name: Upload APK to Firebase App Distribution (Dev)
        if: github.ref == 'refs/heads/develop' # Only for development branch
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
            appId: ${{ secrets.PRIVY_CHAT_ID_ANDROID_DEV }}
            token: ${{ secrets.TOKEN }}
            groups: development_group
            file: build/app/outputs/apk/release/app-release.apk

      # Separate iOS Build (Commented Out)
      # - name: Install CocoaPods
      #   run: sudo gem install cocoapods

      # - name: Build iOS app
      #   run: |
      #     if [ "${{ github.ref }}" == "refs/heads/master" ]; then
      #       flutter build ios --release --no-codesign
      #       xcodebuild -workspace ios/Runner.xcworkspace -scheme Runner -sdk iphoneos -configuration AppStoreDistribution archive -archivePath ${{ runner.temp }}/Runner.xcarchive
      #       xcodebuild -exportArchive -archivePath ${{ runner.temp }}/Runner.xcarchive -exportOptionsPlist ios/ExportOptions.plist -exportPath ${{ runner.temp }}/
      #     else
      #       flutter build ios --debug --no-codesign
      #       xcodebuild -workspace ios/Runner.xcworkspace -scheme Runner -sdk iphoneos -configuration Debug archive -archivePath ${{ runner.temp }}/Runner.xcarchive
      #       xcodebuild -exportArchive -archivePath ${{ runner.temp }}/Runner.xcarchive -exportOptionsPlist ios/ExportOptions.plist -exportPath ${{ runner.temp }}/
      #     fi

      # - name: Upload iOS build artifact
      #   if: github.ref == 'refs/heads/master'
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: release-ios
      #     path: ${{ runner.temp }}/Runner.ipa

      # - name: Upload iOS build artifact (Dev)
      #   if: github.ref == 'refs/heads/develop'
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: release-ios-dev
      #     path: ${{ runner.temp }}/Runner.ipa

      # - name: Upload IPA to Firebase App Distribution
      #   if: github.ref == 'refs/heads/master'
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #       appId: ${{ secrets.PRIVY_CHAT_ID_IOS }}
      #       token: ${{ secrets.TOKEN }}
      #       groups: production_group
      #       file: ${{ runner.temp }}/Runner.ipa

      # - name: Upload IPA to Firebase App Distribution (Dev)
      #   if: github.ref == 'refs/heads/develop'
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #       appId: ${{ secrets.PRIVY_CHAT_ID_IOS_DEV }}
      #       token: ${{ secrets.TOKEN }}
      #       groups: development_group
      #       file: ${{ runner.temp }}/Runner.ipa
